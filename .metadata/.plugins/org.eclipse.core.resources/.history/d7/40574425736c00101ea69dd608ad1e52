package helloworld;

import java.util.*;

class Patient {
    private String id;
    private String name;

    public Patient(String id, String name) {
        this.id = id;
        this.name = name;
    }

    public String getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public String toString() {
        return "ID: " + id + ", Name: " + name;
    }
}

public class AdvancePatientQueue {
    public static void main(String[] args) {
        LinkedList<Patient> queue = new LinkedList<>();
        HashSet<String> patientIds = new HashSet<>();
        Scanner sc = new Scanner(System.in);
        int choice;

        do {
            System.out.println("\n---Advance Patient Queue System---");
            System.out.println("1. Add Normal Patient");
            System.out.println("2. Add Emergency Patient");
            System.out.println("3. Cancel Appointment by ID");
            System.out.println("4. View All Patients");
            System.out.println("5. View First & Last Patient");
            System.out.println("6. Check if Patient Exists (by ID)");
            System.out.println("7. Exit");
            System.out.print("Enter your choice: ");
            choice = sc.nextInt();
            sc.nextLine();

            switch (choice) {
                case 1:
                    System.out.print("Enter Patient ID: ");
                    String id1 = sc.nextLine();
                    if (patientIds.contains(id1)) {
                        System.out.println("Patient with ID already exists.");
                        break;
                    }
                    System.out.print("Enter Patient Name: ");
                    String name1 = sc.nextLine();
                    queue.addLast(new Patient(id1, name1));
                    patientIds.add(id1);
                    System.out.println("Patient added to end of queue.");
                    break;

                case 2:
                    System.out.print("Enter Emergency Patient ID: ");
                    String id2 = sc.nextLine();
                    if (patientIds.contains(id2)) {
                        System.out.println("Patient with ID already exists.");
                        break;
                    }
                    System.out.print("Enter Patient Name: ");
                    String name2 = sc.nextLine();
                    queue.addFirst(new Patient(id2, name2));
                    patientIds.add(id2);
                    System.out.println("Emergency patient added to front of queue.");
                    break;

                case 3:
                    System.out.print("Enter Patient ID to cancel: ");
                    String cancelId = sc.nextLine();
                    boolean found = false;

                    for (int i = 0; i < queue.size(); i++) {
                        if (queue.get(i).getId().equals(cancelId)) {
                            queue.remove(i);
                            patientIds.remove(cancelId);
                            System.out.println("Appointment cancelled for ID: " + cancelId);
                            found = true;
                            break;
                        }
                    }

                    if (!found) {
                        System.out.println("No patient found with that ID.");
                    }
                    break;

                case 4:
                    if (queue.isEmpty()) {
                        System.out.println("No patients in queue.");
                    } else {
                        System.out.println("Current Queue:");
                        for (Patient p : queue) {
                            System.out.println(p);
                        }
                    }
                    break;

                case 5:
                    if (queue.isEmpty()) {
                        System.out.println("Queue is empty.");
                    } else {
                        System.out.println("First in Queue: " + queue.getFirst());
                        System.out.println("Last in Queue: " + queue.getLast());
                    }
                    break;

                case 6:
                    System.out.print("Enter ID to check: ");
                    String checkId = sc.nextLine();
                    if (patientIds.contains(checkId)) {
                        System.out.println("Patient exists in queue.");
                    } else {
                        System.out.println("Patient not found.");
                    }
                    break;

                case 7:
                    System.out.println("Exiting system...");
                    break;

                default:
                    System.out.println("Invalid choice. Please try again.");
            }

        } while (choice != 7);

        sc.close();
    }
}
